{
	"info": {
		"name": "Authlete",
		"description": "Collections of Authlete endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authorization Endpoint",
			"item": [
				{
					"name": "/auth/authorization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "parameters",
									"value": "response_type=code&client_id={{clientId}}&redirect_uri={{redirectUri}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}/api/auth/authorization",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"authorization"
							]
						},
						"description": "This API parses request parameters of an authorization request and returns necessary data for the service implementation to process the authorization request further."
					},
					"response": []
				},
				{
					"name": "/auth/authorization/fail",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "ticket",
									"value": "",
									"description": "The ticket issued from Authlete's /auth/authorization API.",
									"type": "text"
								},
								{
									"key": "reason",
									"value": "",
									"description": "The reason of the failure of the authorization request.",
									"type": "text"
								},
								{
									"key": "description",
									"value": "",
									"description": "The custom description about the authorization failure.",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}/api/auth/authorization/fail",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"authorization",
								"fail"
							]
						},
						"description": "This API generates a content of an error authorization response that the service implementation returns to the client application."
					},
					"response": []
				},
				{
					"name": "/auth/authorization/issue",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "ticket",
									"value": "",
									"description": "The ticket issued from Authlete's /auth/authorization API.",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "",
									"description": "The subject (= a user account managed by the service) who has granted authorization to the client application.",
									"type": "text"
								},
								{
									"key": "authTime",
									"value": "",
									"description": "The time when the authentication of the end-user occurred. Its value is the number of seconds from 1970-01-01.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "acr",
									"value": "",
									"description": "The Authentication Context Class Reference performed for the end-user authentication.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "claims",
									"value": "",
									"description": "The claims of the end-user (= pieces of information about the end-user) in JSON format See OpenID Connect Core 1.0, 5.1. Standard Claims for details about the format.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "properties",
									"value": "",
									"description": "Extra properties to associate with an access token and/or an authorization code.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "scopes",
									"value": "",
									"description": "Scopes to associate with an access token and/or an authorization code. If a non-empty string array is given, it replaces the scopes specified by the original authorization request.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "sub",
									"value": "",
									"description": "The value of the sub claim to embed in an ID token. If this request parameter is null or empty, the value of the subject request parameter is used as the value of the sub claim.",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}/api/auth/authorization/issue",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"authorization",
								"issue"
							]
						},
						"description": "This API generates a content of a successful authorization response that the service implementation returns to the client application."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9dadee11-33ca-4efc-aeb9-4e15fe969734",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ae9ece85-e00e-4dfd-96e2-dc2df9d5678d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Token Endpoint",
			"item": [
				{
					"name": "/auth/token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "parameters",
									"value": "",
									"description": "The value of parameters is the entire entity body (which is formatted in application/x-www-form-urlencoded) of the request from the client application.",
									"type": "text"
								},
								{
									"key": "clientId",
									"value": "",
									"description": "The client ID extracted from Authorization header of the token request from the client application.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "clientSecret",
									"value": "",
									"description": "The client secret extracted from Authorization header of the token request from the client application.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "clientCertificate",
									"value": "",
									"description": "The client certificate from the MTLS of the token request from the client application.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "clientCertificatePath\t",
									"value": "",
									"description": "The certificate path presented by the client during client authentication. These certificates are strings in PEM format.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "properties",
									"value": "",
									"description": "Extra properties to associate with an access token.",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}/api/auth/token",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"token"
							]
						},
						"description": "This API parses request parameters of a token request and returns necessary data for the service implementation to process the token request further."
					},
					"response": []
				},
				{
					"name": "/auth/token/fail",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "ticket",
									"value": "",
									"description": "The ticket issued from Authlete's /auth/token API.",
									"type": "text"
								},
								{
									"key": "reason",
									"value": "",
									"description": "The reason of the failure of the token request.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}/api/auth/token/fail",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"token",
								"fail"
							]
						},
						"description": "This API generates a content of an error token response that the service implementation returns to the client application. This API is used only for Resource Owner Password Credentials Grant."
					},
					"response": []
				},
				{
					"name": "/auth/token/issue",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "ticket",
									"value": "",
									"description": "The ticket issued from Authlete's /auth/token API.",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "",
									"description": "The subject (= unique identifier) of the authenticated user.",
									"type": "text"
								},
								{
									"key": "properties",
									"value": "",
									"description": "Extra properties to associate with a newly created access token. Note that properties parameter is accepted only when Content-Type of the request is application/json, so don't use application/x-www-form-urlencoded if you want to specify properties. See Extra Properties for details.",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}/api/auth/token/issue",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"token",
								"issue"
							]
						},
						"description": "This API generates a content of an error token response that the service implementation returns to the client application. This API is used only for Resource Owner Password Credentials Grant."
					},
					"response": []
				}
			]
		},
		{
			"name": "Introspection Endpoint",
			"item": [
				{
					"name": "/auth/introspection",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "",
									"description": "An access token to introspect.",
									"type": "text"
								},
								{
									"key": "scopes",
									"value": "",
									"description": "A string array listing names of scopes which the caller (= a protected resource endpoint of the service) requires. When the content type of the request from the service is application/x-www-form-urlencoded, the format of scopes is a space-separated list of scope names.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "subject",
									"value": "",
									"description": "A subject (= a user account managed by the service) whom the caller (= a protected resource endpoint of the service) requires.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "clientCertificate",
									"value": "",
									"description": "The client certificate in PEM format, used to validate binding against access tokens using the TLS client certificate confirmation method.",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}/api/auth/introspection",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"introspection"
							]
						},
						"description": "This API gathers information about an access token."
					},
					"response": []
				},
				{
					"name": "/auth/introspection/standard",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "parameters",
									"value": "",
									"description": "Request parameters which comply with the introspection request defined in \"2.1. Introspection Request\" in RFC 7662.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}/api/auth/introspection",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"introspection"
							]
						},
						"description": "This API exists to help your authorization server provide its own introspection API which complies with RFC 7662 (OAuth 2.0 Token Introspection)."
					},
					"response": []
				}
			]
		},
		{
			"name": "Revocation Endpoint",
			"item": [
				{
					"name": "/auth/revocation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "parameters",
									"value": "",
									"description": "OAuth 2.0 token revocation request parameters which are the request parameters that the OAuth 2.0 token revocation endpoint (RFC 7009) of the service implementation received from the client application.",
									"type": "text"
								},
								{
									"key": "clientId",
									"value": "{{clientId}}",
									"description": "The client ID extracted from Authorization header of the token request from the client application.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "clientSecret",
									"value": "{{clientSecret}}",
									"description": "The client secret extracted from Authorization header of the token request from the client application.",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}/api/auth/revocation",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"revocation"
							]
						},
						"description": "This API revokes access tokens and refresh tokens."
					},
					"response": []
				}
			]
		},
		{
			"name": "Userinfo Endpoint",
			"item": [
				{
					"name": "/auth/userinfo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"token\": \"token-value\",\n\t\"clientCertificate\": \"optional\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}/api/auth/userInfo",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"userInfo"
							]
						},
						"description": "This API gathers information about a user."
					},
					"response": []
				},
				{
					"name": "/auth/userinfo/Issue",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "",
									"description": "The access token that has been passed to the service's UserInfo Endpoint by the client application. In other words, the access token which was contained in the userinfo request.",
									"type": "text"
								},
								{
									"key": "claims",
									"value": "",
									"description": "Claims in JSON format. As for the format, see \"OpenID Connect Core 1.0, 5.1. Standard Claims\".",
									"type": "text",
									"disabled": true
								},
								{
									"key": "sub",
									"value": "",
									"description": "The value of the sub claim. If the value of this request parameter is not empty, it is used as the value of the sub claim. Otherwise, the value of the subject associated with the access token is used.",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}/api/auth/userInfo/issue",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"userInfo",
								"issue"
							]
						},
						"description": "This API generates an ID token."
					},
					"response": []
				}
			]
		},
		{
			"name": "JWK Set Endpoint",
			"item": [
				{
					"name": "/service/jwks/get",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/service/jwks/get",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"service",
								"jwks",
								"get"
							],
							"query": [
								{
									"key": "includePrivateKeys",
									"value": "",
									"description": "This boolean value indicates whether the response should include the private keys associated with the service or not. If true, the private keys are included in the response. The default value is false.",
									"disabled": true
								},
								{
									"key": "pretty",
									"value": "",
									"description": "This boolean value indicates whether the JSON in the response should be formatted or not. If true, the JSON in the response is pretty-formatted. The default value is false.",
									"disabled": true
								}
							]
						},
						"description": "This API gathers JWK Set information for a service so that its client applications can verify signatures by the service and encrypt their requests to the service."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "16138a27-4c39-4d2e-acbb-0efff94b1f78",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "050ce2f4-3006-4730-ab09-17352ad8e46d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Discovery Endpoint",
			"item": [
				{
					"name": "/service/configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/service/configuration",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"service",
								"configuration"
							],
							"query": [
								{
									"key": "pretty",
									"value": "",
									"description": "This boolean value indicates whether the JSON in the response should be formatted or not. If true, the JSON in the response is pretty-formatted. The default value is false.",
									"disabled": true
								}
							]
						},
						"description": "This API gathers configuration information of a service."
					},
					"response": []
				}
			]
		},
		{
			"name": "Token Operations",
			"item": [
				{
					"name": "/auth/token/get/list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/auth/token/get/list?",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"token",
								"get",
								"list"
							],
							"query": [
								{
									"key": "clientIdentifier",
									"value": "",
									"description": "Client Identifier (client ID or client ID alias).",
									"disabled": true
								},
								{
									"key": "subject",
									"value": "",
									"description": "Unique user ID.",
									"disabled": true
								},
								{
									"key": "start",
									"value": "",
									"description": "Start index of search results (inclusive). The default value is 0.",
									"disabled": true
								},
								{
									"key": "end",
									"value": "",
									"description": "End index of search results (exclusive). The default value is 5.",
									"disabled": true
								}
							]
						},
						"description": "Get a list of access tokens."
					},
					"response": []
				},
				{
					"name": "/auth/token/create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grantType",
									"value": "",
									"description": "The grant type for a newly created access token. One of the following. \nREFRESH_TOKEN is not allowed.",
									"type": "text"
								},
								{
									"key": "clientId",
									"value": "{{clientId}}",
									"description": "The ID of the client application which will be associated with a newly created access token.",
									"type": "text"
								},
								{
									"key": "subject",
									"value": "",
									"description": "The subject (= unique identifier) of the user who will be associated with a newly created access token. This parameter is required unless the grant type is CLIENT_CREDENTIALS. The value must consist of only ASCII characters and its length must not exceed 100.",
									"type": "text"
								},
								{
									"key": "scopes",
									"value": "",
									"description": "The scopes which will be associated with a newly created access token. Scopes that are not supported by the service cannot be specified and requesting them will cause an error.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "accessTokenDuration",
									"value": "",
									"description": "The duration of a newly created access token in seconds. If the value is 0, the duration is determined according to the settings of the service.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "refreshTokenDuration",
									"value": "",
									"description": "The duration of a newly created refresh token in seconds. If the value is 0, the duration is determined according to the settings of the service.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "properties",
									"value": "",
									"description": "Extra properties to associate with a newly created access token. ",
									"type": "text",
									"disabled": true
								},
								{
									"key": "clientIdAliasUsed",
									"value": "",
									"description": "A boolean request parameter which indicates whether to emulate that the client ID alias is used instead of the original numeric client ID when a new access token is created.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "accessToken",
									"value": "",
									"description": "The value of the new access token.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "refreshToken",
									"value": "",
									"description": "The value of the new refresh token.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "accessTokenPersistent",
									"value": "",
									"description": "Get whether the access token expires or not. By default, all access tokens expire after a period of time determined by their service.",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}/api/auth/token/create",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"token",
								"create"
							]
						},
						"description": "Create an access token."
					},
					"response": []
				},
				{
					"name": "/auth/token/update",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "accessToken",
									"value": "",
									"description": "An existing access token.",
									"type": "text"
								},
								{
									"key": "accessTokenExpiresAt",
									"value": "",
									"description": "A new date at which the access token will expire in milliseconds since the Unix epoch (1970-01-01). If the accessTokenExpiresAt request parameter is not included in a request or its value is 0 (or negative), the expiration date of the access token is not changed.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "scopes",
									"value": "",
									"description": "A new set of scopes assigned to the access token. Scopes that are not supported by the service and those that the client application associated with the access token is not allowed to request are ignored on the server side.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "properties",
									"value": "",
									"description": "A new set of properties assigned to the access token. If the properties request parameter is not included in a request or its value is null, the properties of the access token are not changed.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "accessTokenExpiresAtUpdatedOnScopeUpdate",
									"value": "",
									"description": "A boolean request parameter which indicates whether the API attempts to update the expiration date of the access token when the scopes linked to the access token are changed by this request.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "accessTokenHash",
									"value": "",
									"description": "The hash of the access token value. Used when the hash of the token is known (perhaps from lookup) but the value of the token itself is not. The value of the accessToken parameter takes precedence.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "accessTokenValueUpdated",
									"value": "",
									"description": "A boolean request parameter which indicates whether to update the value of the access token in the data store. If this parameter is set to true then a new access token value is generated by the server and returned in the response.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "accessTokenPersistent",
									"value": "",
									"description": "The flag which indicates whether the access token expires or not. By default, all access tokens expire after a period of time determined by their service. If this request parameter is true then the access token will not automatically expire and must be revoked or deleted manually at the service.",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}/api/auth/token/update",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"token",
								"update"
							]
						},
						"description": "Update an existing access token."
					},
					"response": []
				},
				{
					"name": "/auth/token/delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"accessTokenIdentifier\": \"accessToken\"\n}"
						},
						"url": {
							"raw": "{{baseURL}}/api/auth/token/delete/{accessTokenIdentifier}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"token",
								"delete",
								"{accessTokenIdentifier}"
							]
						},
						"description": "Delete an existing access token."
					},
					"response": []
				}
			]
		},
		{
			"name": "JOSE Object",
			"item": [
				{
					"name": "/jose/verify",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "jose",
									"value": "",
									"description": "A JOSE object that will be verified.",
									"type": "text"
								},
								{
									"key": "clientIdentifier",
									"value": "CONDITIONALLY REQUIRED",
									"description": "The identifier of the client application whose keys are required for verification of the JOSE object.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "mandatoryClaims",
									"value": "",
									"description": "Mandatory claims that are required to be included in the JOSE object.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "clockSkew",
									"value": "",
									"description": "Allowable clock skew in seconds.",
									"type": "text",
									"disabled": true
								},
								{
									"key": "signedByClient",
									"value": "",
									"description": "The flag which indicates whether the signature of the JOSE object has been signed by a client application with the client's private key or a shared symmetric key.",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}/api/jose/verify",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"jose",
								"verify"
							]
						},
						"description": "This API verifies a JOSE object."
					},
					"response": []
				}
			]
		},
		{
			"name": "Direct Endpoints",
			"item": [
				{
					"name": "/auth/token/direct/",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{clientSecret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{clientId}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://api.authlete.com/api/auth/token/direct/{{apiKey}}",
							"protocol": "https",
							"host": [
								"api",
								"authlete",
								"com"
							],
							"path": [
								"api",
								"auth",
								"token",
								"direct",
								"{{apiKey}}"
							]
						},
						"description": "Authlete Token API Default Implementation"
					},
					"response": []
				},
				{
					"name": "/auth/authorization/direct",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/auth/authorization/direct/{{apiKey}}?response_type=token&client_id={{clientId}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"auth",
								"authorization",
								"direct",
								"{{apiKey}}"
							],
							"query": [
								{
									"key": "response_type",
									"value": "token"
								},
								{
									"key": "client_id",
									"value": "{{clientId}}"
								}
							]
						},
						"description": "Default authorization endpoint implementation"
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{apiSecret}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{apiKey}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "2da169f1-f3be-4233-b168-fdf9c89fdd78",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "b315ba73-e7d2-4dcb-b9f1-73b216ed8c1d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}